<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ryj.yuyue.dao.ClassTagMapper">
  <resultMap id="BaseResultMap" type="com.ryj.yuyue.bean.ClassTag">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="relaxed" jdbcType="INTEGER" property="relaxed" />
    <result column="intense" jdbcType="INTEGER" property="intense" />
    <result column="common" jdbcType="INTEGER" property="common" />
    <result column="recovery" jdbcType="INTEGER" property="recovery" />
    <result column="enhance" jdbcType="INTEGER" property="enhance" />
    <result column="nurse" jdbcType="INTEGER" property="nurse" />
    <result column="consume" jdbcType="INTEGER" property="consume" />
    <result column="class_k_id" jdbcType="INTEGER" property="classKId" />
  </resultMap>
  <resultMap id="BaseResultMapResult" type="com.ryj.yuyue.bean.ClassTagResult">
    <result column="id" property="id" />
    <result column="relaxed" property="relaxed" />
    <result column="intense" property="intense" />
    <result column="common" property="common" />
    <result column="recovery" property="recovery" />
    <result column="enhance" property="enhance" />
    <result column="nurse" property="nurse" />
    <result column="consume" property="consume" />
    <result column="class_k_id" property="classKId" />
    <result column="difficulty" property="difficulty" />
    <result column="property" property="property" />
    <result column="cla_k_name" property="claKName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, relaxed, intense, common, recovery, enhance, nurse, consume, class_k_id
  </sql>
  <sql id="Base_Column_List_Result">
    ct.id, ct.relaxed, ct.intense, ct.common, ct.recovery, ct.enhance, ct.nurse, ct.consume, ct.class_k_id, 
	ck.difficulty, ck.property, ck.cla_k_name
  </sql>
  <select id="selectByExample" parameterType="com.ryj.yuyue.bean.ClassTagExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from class_tag
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from class_tag
    where id = #{id,jdbcType=INTEGER}
  </select>
  <!-- List<ClassTag> getClassTag(
    		@Param("placeId") Integer placeId, 
    		@Param("classKId") Integer classKId); -->
  <select id="getClassTag" resultMap="BaseResultMapResult">
    select 
    <include refid="Base_Column_List_Result" />
    from class_tag ct, class_kind ck
    <trim prefix="where" prefixOverrides="and">
      ct.class_k_id = ck.id
	  <if test="classKId != null">
        and ck.id = #{classKId}
      </if>
      <if test="placeId != null">
        and ck.p_id = #{placeId}
      </if>
    </trim>
  </select>
  <!-- ClassTagResult getOneClassTag(
    		@Param("id") Integer id); -->
  <select id="getOneClassTag" resultMap="BaseResultMapResult">
    select 
    <include refid="Base_Column_List_Result" />
    from class_tag ct, class_kind ck
    <trim prefix="where" prefixOverrides="and">
      ct.class_k_id = ck.id and ct.id = #{id}
    </trim>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from class_tag
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ryj.yuyue.bean.ClassTagExample">
    delete from class_tag
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ryj.yuyue.bean.ClassTag">
    insert into class_tag (id, relaxed, intense, 
      common, recovery, enhance, 
      nurse, consume, class_k_id
      )
    values (#{id,jdbcType=INTEGER}, #{relaxed,jdbcType=INTEGER}, #{intense,jdbcType=INTEGER}, 
      #{common,jdbcType=INTEGER}, #{recovery,jdbcType=INTEGER}, #{enhance,jdbcType=INTEGER}, 
      #{nurse,jdbcType=INTEGER}, #{consume,jdbcType=INTEGER}, #{classKId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ryj.yuyue.bean.ClassTag">
    insert into class_tag
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="relaxed != null">
        relaxed,
      </if>
      <if test="intense != null">
        intense,
      </if>
      <if test="common != null">
        common,
      </if>
      <if test="recovery != null">
        recovery,
      </if>
      <if test="enhance != null">
        enhance,
      </if>
      <if test="nurse != null">
        nurse,
      </if>
      <if test="consume != null">
        consume,
      </if>
      <if test="classKId != null">
        class_k_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="relaxed != null">
        #{relaxed,jdbcType=INTEGER},
      </if>
      <if test="intense != null">
        #{intense,jdbcType=INTEGER},
      </if>
      <if test="common != null">
        #{common,jdbcType=INTEGER},
      </if>
      <if test="recovery != null">
        #{recovery,jdbcType=INTEGER},
      </if>
      <if test="enhance != null">
        #{enhance,jdbcType=INTEGER},
      </if>
      <if test="nurse != null">
        #{nurse,jdbcType=INTEGER},
      </if>
      <if test="consume != null">
        #{consume,jdbcType=INTEGER},
      </if>
      <if test="classKId != null">
        #{classKId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ryj.yuyue.bean.ClassTagExample" resultType="java.lang.Long">
    select count(*) from class_tag
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update class_tag
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.relaxed != null">
        relaxed = #{record.relaxed,jdbcType=INTEGER},
      </if>
      <if test="record.intense != null">
        intense = #{record.intense,jdbcType=INTEGER},
      </if>
      <if test="record.common != null">
        common = #{record.common,jdbcType=INTEGER},
      </if>
      <if test="record.recovery != null">
        recovery = #{record.recovery,jdbcType=INTEGER},
      </if>
      <if test="record.enhance != null">
        enhance = #{record.enhance,jdbcType=INTEGER},
      </if>
      <if test="record.nurse != null">
        nurse = #{record.nurse,jdbcType=INTEGER},
      </if>
      <if test="record.consume != null">
        consume = #{record.consume,jdbcType=INTEGER},
      </if>
      <if test="record.classKId != null">
        class_k_id = #{record.classKId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update class_tag
    set id = #{record.id,jdbcType=INTEGER},
      relaxed = #{record.relaxed,jdbcType=INTEGER},
      intense = #{record.intense,jdbcType=INTEGER},
      common = #{record.common,jdbcType=INTEGER},
      recovery = #{record.recovery,jdbcType=INTEGER},
      enhance = #{record.enhance,jdbcType=INTEGER},
      nurse = #{record.nurse,jdbcType=INTEGER},
      consume = #{record.consume,jdbcType=INTEGER},
      class_k_id = #{record.classKId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ryj.yuyue.bean.ClassTag">
    update class_tag
    <set>
      <if test="relaxed != null">
        relaxed = #{relaxed,jdbcType=INTEGER},
      </if>
      <if test="intense != null">
        intense = #{intense,jdbcType=INTEGER},
      </if>
      <if test="common != null">
        common = #{common,jdbcType=INTEGER},
      </if>
      <if test="recovery != null">
        recovery = #{recovery,jdbcType=INTEGER},
      </if>
      <if test="enhance != null">
        enhance = #{enhance,jdbcType=INTEGER},
      </if>
      <if test="nurse != null">
        nurse = #{nurse,jdbcType=INTEGER},
      </if>
      <if test="consume != null">
        consume = #{consume,jdbcType=INTEGER},
      </if>
      <if test="classKId != null">
        class_k_id = #{classKId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ryj.yuyue.bean.ClassTag">
    update class_tag
    set relaxed = #{relaxed,jdbcType=INTEGER},
      intense = #{intense,jdbcType=INTEGER},
      common = #{common,jdbcType=INTEGER},
      recovery = #{recovery,jdbcType=INTEGER},
      enhance = #{enhance,jdbcType=INTEGER},
      nurse = #{nurse,jdbcType=INTEGER},
      consume = #{consume,jdbcType=INTEGER},
      class_k_id = #{classKId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>