<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ryj.yuyue.dao.ClassKindMapper">
  <resultMap id="BaseResultMap" type="com.ryj.yuyue.bean.ClassKind">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="p_id" jdbcType="INTEGER" property="pId" />
    <result column="property" jdbcType="VARCHAR" property="property" />
    <result column="cla_k_name" jdbcType="VARCHAR" property="claKName" />
    <result column="difficulty" jdbcType="INTEGER" property="difficulty" />
    <result column="intro" jdbcType="VARCHAR" property="intro" />
  </resultMap>
  <resultMap id="BaseResultMapForResult" type="com.ryj.yuyue.bean.ClassKindResult">
    <result column="id" property="id" />
    <result column="p_id" property="pId" />
    <result column="s_name" property="pName" />
    <result column="property" property="property" />
    <result column="cla_k_name" property="claKName" />
    <result column="difficulty" property="difficulty" />
    <result column="intro" property="intro" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, p_id, property, cla_k_name, difficulty, intro
  </sql>
  <sql id="Base_Column_List_Result">
    ck.id, ck.p_id, p.s_name, ck.property, ck.cla_k_name, ck.difficulty, ck.intro
  </sql>
  <select id="selectByExample" parameterType="com.ryj.yuyue.bean.ClassKindExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from class_kind
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from class_kind
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <!-- List<ClassKindResult> getClassKind(
  			@Param("classKId") Integer classKId,
    		@Param("managerId") Integer managerId, 
    		@Param("kName") String kName, 
    		@Param("property") String property,
    		@Param("difficulty") Integer difficulty); -->
  <select id="getClassKind" 
  		  resultMap="BaseResultMapForResult">
    select 
    <include refid="Base_Column_List_Result" />
    from class_kind ck, manager m, place p
    <trim prefix="where" prefixOverrides="and">
      ck.p_id = p.id and m.p_id = p.id
	  <if test="classKId != null">
        and ck.id = #{classKId}
      </if>
      <if test="managerId != null">
        and m.id = #{managerId}
      </if>
      <if test="kName != null and kName.length != 0">
        and ck.cla_k_name like '%${kName}%'
      </if>
      <if test="property != null and property.length != 0">
        and ck.property = #{property}
      </if>
      <if test="difficulty != null">
        and ck.difficulty = #{difficulty}
      </if>
    </trim>
    order by ck.id asc
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from class_kind
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ryj.yuyue.bean.ClassKindExample">
    delete from class_kind
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ryj.yuyue.bean.ClassKind">
    insert into class_kind (id, p_id, property, 
      cla_k_name, difficulty, intro
      )
    values (#{id,jdbcType=INTEGER}, #{pId,jdbcType=INTEGER}, #{property,jdbcType=VARCHAR}, 
      #{claKName,jdbcType=VARCHAR}, #{difficulty,jdbcType=INTEGER}, #{intro,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ryj.yuyue.bean.ClassKind">
    insert into class_kind
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="pId != null">
        p_id,
      </if>
      <if test="property != null">
        property,
      </if>
      <if test="claKName != null">
        cla_k_name,
      </if>
      <if test="difficulty != null">
        difficulty,
      </if>
      <if test="intro != null">
        intro,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="pId != null">
        #{pId,jdbcType=INTEGER},
      </if>
      <if test="property != null">
        #{property,jdbcType=VARCHAR},
      </if>
      <if test="claKName != null">
        #{claKName,jdbcType=VARCHAR},
      </if>
      <if test="difficulty != null">
        #{difficulty,jdbcType=INTEGER},
      </if>
      <if test="intro != null">
        #{intro,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ryj.yuyue.bean.ClassKindExample" resultType="java.lang.Long">
    select count(*) from class_kind
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update class_kind
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.pId != null">
        p_id = #{record.pId,jdbcType=INTEGER},
      </if>
      <if test="record.property != null">
        property = #{record.property,jdbcType=VARCHAR},
      </if>
      <if test="record.claKName != null">
        cla_k_name = #{record.claKName,jdbcType=VARCHAR},
      </if>
      <if test="record.difficulty != null">
        difficulty = #{record.difficulty,jdbcType=INTEGER},
      </if>
      <if test="record.intro != null">
        intro = #{record.intro,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update class_kind
    set id = #{record.id,jdbcType=INTEGER},
      p_id = #{record.pId,jdbcType=INTEGER},
      property = #{record.property,jdbcType=VARCHAR},
      cla_k_name = #{record.claKName,jdbcType=VARCHAR},
      difficulty = #{record.difficulty,jdbcType=INTEGER},
      intro = #{record.intro,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ryj.yuyue.bean.ClassKind">
    update class_kind
    <set>
      <if test="pId != null">
        p_id = #{pId,jdbcType=INTEGER},
      </if>
      <if test="property != null">
        property = #{property,jdbcType=VARCHAR},
      </if>
      <if test="claKName != null">
        cla_k_name = #{claKName,jdbcType=VARCHAR},
      </if>
      <if test="difficulty != null">
        difficulty = #{difficulty,jdbcType=INTEGER},
      </if>
      <if test="intro != null">
        intro = #{intro,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ryj.yuyue.bean.ClassKind">
    update class_kind
    set p_id = #{pId,jdbcType=INTEGER},
      property = #{property,jdbcType=VARCHAR},
      cla_k_name = #{claKName,jdbcType=VARCHAR},
      difficulty = #{difficulty,jdbcType=INTEGER},
      intro = #{intro,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>